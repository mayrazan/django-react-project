# Generated by Django 3.2.3 on 2021-06-07 01:31

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import gdstorage.storage


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Users',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('email', models.EmailField(max_length=255, unique=True)),
                ('name', models.CharField(max_length=100)),
                ('lastName', models.CharField(max_length=100)),
                ('is_active', models.BooleanField(default=True)),
                ('is_staff', models.BooleanField(default=False)),
                ('avatar', models.ImageField(blank=True, null=True, storage=gdstorage.storage.GoogleDriveStorage(permissions=(gdstorage.storage.GoogleDriveFilePermission(gdstorage.storage.GoogleDrivePermissionRole['WRITER'], gdstorage.storage.GoogleDrivePermissionType['ANYONE']),)), upload_to='helpdesk/')),
                ('numAp', models.IntegerField(unique=True)),
                ('floor', models.IntegerField(blank=True, null=True)),
                ('password', models.CharField(max_length=255)),
                ('cpf', models.CharField(blank=True, max_length=11)),
                ('phone', models.CharField(max_length=11)),
                ('isUser', models.BooleanField(default=True)),
                ('isAdmin', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Files',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('files', models.FileField(blank=True, null=True, storage=gdstorage.storage.GoogleDriveStorage(permissions=(gdstorage.storage.GoogleDriveFilePermission(gdstorage.storage.GoogleDrivePermissionRole['WRITER'], gdstorage.storage.GoogleDrivePermissionType['ANYONE']),)), upload_to='helpdesk/')),
            ],
        ),
        migrations.CreateModel(
            name='Notifications',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('notificationType', models.CharField(choices=[('Manutenção', 'Manutenção'), ('Mudança', 'Mudança'), ('Reunião', 'Reunião'), ('Informações Gerais', 'Informações Gerais'), ('Outros', 'Outros')], default='Informações Gerais', max_length=30)),
                ('description', models.TextField()),
                ('date', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Problems',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('problemType', models.CharField(max_length=50, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Tickets',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('Em aberto', 'Em aberto'), ('Em análise', 'Em análise'), ('Concluído', 'Concluído'), ('Rejeitado', 'Rejeitado')], default='Em aberto', max_length=30)),
                ('priority', models.CharField(choices=[('Baixa', 'Baixa'), ('Media', 'Media'), ('Alta', 'Alta')], max_length=30)),
                ('numApOccurrence', models.IntegerField()),
                ('description', models.TextField()),
                ('feedbackManager', models.TextField(blank=True)),
                ('openDate', models.DateTimeField(auto_now_add=True)),
                ('files', models.FileField(blank=True, null=True, storage=gdstorage.storage.GoogleDriveStorage(permissions=(gdstorage.storage.GoogleDriveFilePermission(gdstorage.storage.GoogleDrivePermissionRole['WRITER'], gdstorage.storage.GoogleDrivePermissionType['ANYONE']),)), upload_to='helpdesk/')),
                ('problem', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.problems', to_field='problemType')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='user', to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
